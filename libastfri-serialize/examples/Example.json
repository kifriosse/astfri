{
  "node" : "TranslationUnit",
  "classes" : [{
    "node" : "ClassDefStmt",
    "name" : "ReversePolishNotation",
    "atrributes" : [{
      "node" : "MemberVarDefStmt",
      "name" : "ONE_BILLION",
      "type" : {
        "node" : "IntType"
      },
      "initialzer" : {
        "node" : "IntLitExpr",
        "value" : 1000000000
      },
      "acces" : "public"
    },{
      "node" : "MemberVarDefStmt",
      "name" : "e",
      "type" : {
        "node" : "IntType"
      },
      "acces" : "public"
    },{
      "node" : "MemberVarDefStmt",
      "name" : "memory",
      "type" : {
        "node" : "FloatType"
      },
      "acces" : "private"
    },{
      "node" : "MemberVarDefStmt",
      "name" : "meno",
      "type" : {
        "node" : "UserType",
        "name" : "String"
      },
      "acces" : "private"
    }],
    "methods" : [{
      "node" : "MethodDefStmt",
      "owner" : "ReversePolishNotation",
      "name" : "getBool",
      "access" : "public",
      "parameters" : [ ],
      "return_type" : {
        "node" : "BoolType"
      },
      "body" : {
        "type" : "CompoundStmt",
        "statements" : [{
          "node" : "ReturnStmt",
          "value" : {
            "node" : "BoolLitExpr",
            "value" : true
          }
        }]
      }
    },{
      "node" : "MethodDefStmt",
      "owner" : "ReversePolishNotation",
      "name" : "calc",
      "access" : "public",
      "parameters" : [{
        "node" : "ParamVarDefStmt",
        "name" : "input",
        "type" : {
          "node" : "UserType",
          "name" : "String"
        },
        "initialiser" : null
      }],
      "return_type" : {
        "node" : "UserType",
        "name" : "Double"
      },
      "body" : {
        "type" : "CompoundStmt",
        "statements" : [{
          "node" : "LocalVarDefStmt",
          "name" : "tokens",
          "type" : {
            "node" : "UserType",
            "name" : "String"
          },
          "initialzer" : {
            "node" : "MethodCallExpr",
            "name" : "split",
            "owner" : {
              "node" : "ParamVarRefExpr",
              "name" : "input"
            },
            "arguments" : [{
              "node" : "StringLitExpr",
              "value" : " "
            }]
          }
        },{
          "node" : "LocalVarDefStmt",
          "name" : "numbers",
          "type" : {
            "node" : "UserType",
            "name" : "Stack<Double>"
          },
          "initialzer" : {
            "node" : "ConstructorCallExpr"
          }
        },{
          "node" : "ExpressionStmt",
          "expression" : {
            "node" : "MethodCallExpr",
            "name" : "forEach",
            "owner" : {
              "node" : "MethodCallExpr",
              "name" : "of",
              "owner" : {
                "node" : "ClassRefExpr",
                "name" : "Stream"
              },
              "arguments" : [{
                "node" : "LocalVarRefExpr",
                "name" : "tokens"
              }]
            },
            "arguments" : [{
              "node" : "LambdaExpr",
              "params" : [{
                "node" : "ParamVarDefStmt",
                "name" : "t",
                "type" : {
                  "node" : "UnknownType"
                },
                "initialiser" : null
              }],
              "body" : {
                "type" : "CompoundStmt",
                "statements" : [{
                  "node" : "LocalVarDefStmt",
                  "name" : "a",
                  "type" : {
                    "node" : "FloatType"
                  }
                },{
                  "node" : "LocalVarDefStmt",
                  "name" : "b",
                  "type" : {
                    "node" : "FloatType"
                  }
                },{
                  "node" : "SwitchStmt",
                  "entry" : {
                    "node" : "ParamVarRefExpr",
                    "name" : "t"
                  },
                  "cases" : [{
                    "node" : "CaseStmt",
                    "expression" : {
                      "node" : "StringLitExpr",
                      "value" : "+"
                    },
                    "body" : {
                      "node" : "CompoundStmt",
                      "statements" : [{
                        "node" : "ExpressionStmt",
                        "expression" : {
                          "node" : "AssignExpr",
                          "left" : {
                            "node" : "LocalVarRefExpr",
                            "name" : "b"
                          },
                          "right" : {
                            "node" : "MethodCallExpr",
                            "name" : "pop",
                            "owner" : {
                              "node" : "LocalVarRefExpr",
                              "name" : "numbers"
                            },
                            "arguments" : [ ]
                          }
                        }
                      },{
                        "node" : "ExpressionStmt",
                        "expression" : {
                          "node" : "AssignExpr",
                          "left" : {
                            "node" : "LocalVarRefExpr",
                            "name" : "a"
                          },
                          "right" : {
                            "node" : "MethodCallExpr",
                            "name" : "pop",
                            "owner" : {
                              "node" : "LocalVarRefExpr",
                              "name" : "numbers"
                            },
                            "arguments" : [ ]
                          }
                        }
                      },{
                        "node" : "ExpressionStmt",
                        "expression" : {
                          "node" : "MethodCallExpr",
                          "name" : "push",
                          "owner" : {
                            "node" : "LocalVarRefExpr",
                            "name" : "numbers"
                          },
                          "arguments" : [{
                            "node" : "BinOpExpr",
                            "left" : {
                              "node" : "LocalVarRefExpr",
                              "name" : "a"
                            },
                            "right" : {
                              "node" : "LocalVarRefExpr",
                              "name" : "b"
                            },
                            "operator" : "+"
                          }]
                        }
                      },null]
                    }
                  },{
                    "node" : "CaseStmt",
                    "expression" : {
                      "node" : "StringLitExpr",
                      "value" : "/"
                    },
                    "body" : {
                      "node" : "CompoundStmt",
                      "statements" : [{
                        "node" : "ExpressionStmt",
                        "expression" : {
                          "node" : "AssignExpr",
                          "left" : {
                            "node" : "LocalVarRefExpr",
                            "name" : "b"
                          },
                          "right" : {
                            "node" : "MethodCallExpr",
                            "name" : "pop",
                            "owner" : {
                              "node" : "LocalVarRefExpr",
                              "name" : "numbers"
                            },
                            "arguments" : [ ]
                          }
                        }
                      },{
                        "node" : "ExpressionStmt",
                        "expression" : {
                          "node" : "AssignExpr",
                          "left" : {
                            "node" : "LocalVarRefExpr",
                            "name" : "a"
                          },
                          "right" : {
                            "node" : "MethodCallExpr",
                            "name" : "pop",
                            "owner" : {
                              "node" : "LocalVarRefExpr",
                              "name" : "numbers"
                            },
                            "arguments" : [ ]
                          }
                        }
                      },{
                        "node" : "ExpressionStmt",
                        "expression" : {
                          "node" : "MethodCallExpr",
                          "name" : "push",
                          "owner" : {
                            "node" : "LocalVarRefExpr",
                            "name" : "numbers"
                          },
                          "arguments" : [{
                            "node" : "BinOpExpr",
                            "left" : {
                              "node" : "LocalVarRefExpr",
                              "name" : "a"
                            },
                            "right" : {
                              "node" : "LocalVarRefExpr",
                              "name" : "b"
                            },
                            "operator" : "/"
                          }]
                        }
                      },null]
                    }
                  },{
                    "node" : "CaseStmt",
                    "expression" : {
                      "node" : "StringLitExpr",
                      "value" : "-"
                    },
                    "body" : {
                      "node" : "CompoundStmt",
                      "statements" : [{
                        "node" : "ExpressionStmt",
                        "expression" : {
                          "node" : "AssignExpr",
                          "left" : {
                            "node" : "LocalVarRefExpr",
                            "name" : "b"
                          },
                          "right" : {
                            "node" : "MethodCallExpr",
                            "name" : "pop",
                            "owner" : {
                              "node" : "LocalVarRefExpr",
                              "name" : "numbers"
                            },
                            "arguments" : [ ]
                          }
                        }
                      },{
                        "node" : "ExpressionStmt",
                        "expression" : {
                          "node" : "AssignExpr",
                          "left" : {
                            "node" : "LocalVarRefExpr",
                            "name" : "a"
                          },
                          "right" : {
                            "node" : "MethodCallExpr",
                            "name" : "pop",
                            "owner" : {
                              "node" : "LocalVarRefExpr",
                              "name" : "numbers"
                            },
                            "arguments" : [ ]
                          }
                        }
                      },{
                        "node" : "ExpressionStmt",
                        "expression" : {
                          "node" : "MethodCallExpr",
                          "name" : "push",
                          "owner" : {
                            "node" : "LocalVarRefExpr",
                            "name" : "numbers"
                          },
                          "arguments" : [{
                            "node" : "BinOpExpr",
                            "left" : {
                              "node" : "LocalVarRefExpr",
                              "name" : "a"
                            },
                            "right" : {
                              "node" : "LocalVarRefExpr",
                              "name" : "b"
                            },
                            "operator" : "-"
                          }]
                        }
                      },null]
                    }
                  },{
                    "node" : "CaseStmt",
                    "expression" : {
                      "node" : "StringLitExpr",
                      "value" : "*"
                    },
                    "body" : {
                      "node" : "CompoundStmt",
                      "statements" : [{
                        "node" : "ExpressionStmt",
                        "expression" : {
                          "node" : "AssignExpr",
                          "left" : {
                            "node" : "LocalVarRefExpr",
                            "name" : "b"
                          },
                          "right" : {
                            "node" : "MethodCallExpr",
                            "name" : "pop",
                            "owner" : {
                              "node" : "LocalVarRefExpr",
                              "name" : "numbers"
                            },
                            "arguments" : [ ]
                          }
                        }
                      },{
                        "node" : "ExpressionStmt",
                        "expression" : {
                          "node" : "AssignExpr",
                          "left" : {
                            "node" : "LocalVarRefExpr",
                            "name" : "a"
                          },
                          "right" : {
                            "node" : "MethodCallExpr",
                            "name" : "pop",
                            "owner" : {
                              "node" : "LocalVarRefExpr",
                              "name" : "numbers"
                            },
                            "arguments" : [ ]
                          }
                        }
                      },{
                        "node" : "ExpressionStmt",
                        "expression" : {
                          "node" : "MethodCallExpr",
                          "name" : "push",
                          "owner" : {
                            "node" : "LocalVarRefExpr",
                            "name" : "numbers"
                          },
                          "arguments" : [{
                            "node" : "BinOpExpr",
                            "left" : {
                              "node" : "LocalVarRefExpr",
                              "name" : "a"
                            },
                            "right" : {
                              "node" : "LocalVarRefExpr",
                              "name" : "b"
                            },
                            "operator" : "*"
                          }]
                        }
                      },null]
                    }
                  },{
                    "node" : "CaseStmt",
                    "expression" : "default",
                    "body" : {
                      "node" : "ExpressionStmt",
                      "expression" : {
                        "node" : "MethodCallExpr",
                        "name" : "push",
                        "owner" : {
                          "node" : "LocalVarRefExpr",
                          "name" : "numbers"
                        },
                        "arguments" : [{
                          "node" : "MethodCallExpr",
                          "name" : "valueOf",
                          "owner" : {
                            "node" : "ClassRefExpr",
                            "name" : "Double"
                          },
                          "arguments" : [{
                            "node" : "ParamVarRefExpr",
                            "name" : "t"
                          }]
                        }]
                      }
                    }
                  }]
                }]
              }
            }]
          }
        },{
          "node" : "ReturnStmt",
          "value" : {
            "node" : "MethodCallExpr",
            "name" : "pop",
            "owner" : {
              "node" : "LocalVarRefExpr",
              "name" : "numbers"
            },
            "arguments" : [ ]
          }
        }]
      }
    },{
      "node" : "MethodDefStmt",
      "owner" : "ReversePolishNotation",
      "name" : "memoryRecall",
      "access" : "public",
      "parameters" : [ ],
      "return_type" : {
        "node" : "FloatType"
      },
      "body" : {
        "type" : "CompoundStmt",
        "statements" : [{
          "node" : "ReturnStmt",
          "value" : {
            "node" : "MemberVarRefExpr",
            "name" : "memory"
          }
        }]
      }
    },{
      "node" : "MethodDefStmt",
      "owner" : "ReversePolishNotation",
      "name" : "memoryClear",
      "access" : "public",
      "parameters" : [ ],
      "return_type" : {
        "node" : "VoidType"
      },
      "body" : {
        "type" : "CompoundStmt",
        "statements" : [{
          "node" : "ExpressionStmt",
          "expression" : {
            "node" : "AssignExpr",
            "left" : {
              "node" : "MemberVarRefExpr",
              "name" : "memory"
            },
            "right" : {
              "node" : "IntLitExpr",
              "value" : 0
            }
          }
        }]
      }
    },{
      "node" : "MethodDefStmt",
      "owner" : "ReversePolishNotation",
      "name" : "memoryStore",
      "access" : "public",
      "parameters" : [{
        "node" : "ParamVarDefStmt",
        "name" : "value",
        "type" : {
          "node" : "FloatType"
        },
        "initialiser" : null
      }],
      "return_type" : {
        "node" : "VoidType"
      },
      "body" : {
        "type" : "CompoundStmt",
        "statements" : [{
          "node" : "ExpressionStmt",
          "expression" : {
            "node" : "AssignExpr",
            "left" : {
              "node" : "MemberVarRefExpr",
              "name" : "memory"
            },
            "right" : {
              "node" : "ParamVarRefExpr",
              "name" : "value"
            }
          }
        }]
      }
    }],
    "generic_parameters" : [{
      "node" : "GenericParam",
      "name" : "T",
      "constraint" : "Number"
    }]
  }],
  "functions" : [ ],
  "globals" : [ ]
}
